@use '../abstracts/variables' as var;
@use '../abstracts/mixins' as mix;

.btn {
	&,
	&:link,
	&:visited {
		@include mix.btn-base;
		padding: 1.5rem 4rem;
		border-radius: var.$defautl-border-radius;
		position: relative;
		font-size: var.$default-font-size;

		border: none;
		cursor: pointer;
	}

	&:hover {
		transform: translateY(-0.3rem);
		box-shadow: var.$btn-shadow-before;

		&::after {
			transform: scale(1.4, 1.6);
			opacity: 0;
		}
	}

	&:active,
	&:focus {
		outline: none;
		transform: translateY(-0.1rem);
		box-shadow: var.$btn-shadow-after;
	}

	&--white {
		background-color: var.$color-white;
		color: var.$color-grey-dark;

		&::after {
			background-color: var.$color-white;
		}
	}

	&--green {
		background-color: var.$color-primary;
		color: var.$color-white;

		&::after {
			background-color: var.$color-primary;
		}
	}

	&::after {
		content: '';
		display: inline-block;
		height: 100%;
		width: 100%;
		border-radius: var.$defautl-border-radius;
		position: absolute;
		top: 0;
		left: 0;
		z-index: -1;
		transition: all 0.4s;
	}

	&--fade-up {
		animation: fadein-bottom 0.5s ease-out 0.75s;
		animation-fill-mode: backwards;
	}
}

.btn-text {
	&:link,
	&:visited {
		@include mix.btn-base;
		color: var.$color-primary;
		border-bottom: 1px solid var.$color-primary;
		padding: 3px;
		font-size: var.$default-font-size;
		transition: all 0.2s;
	}
	&:hover {
		background-color: var.$color-primary;
		color: var.$color-white;
		transform: translateY(-2px);
		box-shadow: var.$btn-shadow-after;
	}
	&:active {
		transform: translateY(1px);
		box-shadow: var.$btn-shadow-after;
	}
}
